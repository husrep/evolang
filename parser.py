from ai import AIModel

class Parser:
    """
    Parser class to execute EvoLang tokens.
    """
    def __init__(self):
        self.model = None

    def execute(self, tokens):
        """
        Executes the list of tokens generated by the Lexer.
        """
        for token in tokens:
            if token["type"] == "LOAD_MODEL":
                model_name = self._extract_model_name(token["value"])
                self.model = AIModel(model_name)
                print(f"Model '{model_name}' loaded.")
            elif token["type"] == "PREDICT":
                prompt = self._extract_prompt(token["value"])
                if self.model:
                    result = self.model.predict(prompt)
                    print(f"Prediction: {result}")
            elif token["type"] == "PRINT":
                content = self._extract_print_content(token["value"])
                print(f"Output: {content}")

    def _extract_model_name(self, line):
        """
        Extracts the model name from the LOAD_MODEL line.
        """
        start = line.find("(") + 2
        end = line.find(")") - 1
        return line[start:end]

    def _extract_prompt(self, line):
        """
        Extracts the prompt from the PREDICT line.
        """
        start = line.find("\"") + 1
        end = line.rfind("\"")
        return line[start:end]

    def _extract_print_content(self, line):
        """
        Extracts the content to print from the PRINT line.
        """
        start = line.find("\"") + 1
        end = line.rfind("\"")
        return line[start:end]
